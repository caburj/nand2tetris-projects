function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto THEN0
goto ELSE0
label THEN0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto ENDIF0
label ELSE0
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label ENDIF0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto THEN1
goto ELSE1
label THEN1
push this 4
push this 5
add
pop this 4
goto ENDIF1
label ELSE1
push this 4
push this 6
add
pop this 4
push this 9
if-goto THEN2
goto ELSE2
label THEN2
push this 7
if-goto THEN3
goto ELSE3
label THEN3
push this 0
push constant 4
add
pop this 0
goto ENDIF2
label ELSE3
push this 1
push constant 4
add
pop this 1
label ENDIF2
goto ENDIF3
label ELSE2
push this 7
if-goto THEN4
goto ELSE4
label THEN4
push this 0
push constant 4
sub
pop this 0
goto ENDIF4
label ELSE4
push this 1
push constant 4
sub
pop this 1
label ENDIF4
label ENDIF3
label ENDIF1
push this 8
if-goto THEN5
goto ELSE5
label THEN5
push this 7
if-goto THEN6
goto ELSE6
label THEN6
push this 1
push constant 4
add
pop this 1
goto ENDIF5
label ELSE6
push this 0
push constant 4
add
pop this 0
label ENDIF5
goto ENDIF6
label ELSE5
push this 7
if-goto THEN7
goto ELSE7
label THEN7
push this 1
push constant 4
sub
pop this 1
goto ENDIF7
label ELSE7
push this 0
push constant 4
sub
pop this 0
label ENDIF7
label ENDIF6
push this 0
push this 10
gt
not
if-goto THEN8
goto ELSE8
label THEN8
push constant 1
pop this 14
push this 10
pop this 0
label ELSE8
push this 0
push this 11
lt
not
if-goto THEN9
goto ELSE9
label THEN9
push constant 2
pop this 14
push this 11
pop this 0
label ELSE9
push this 1
push this 12
gt
not
if-goto THEN10
goto ELSE10
label THEN10
push constant 3
pop this 14
push this 12
pop this 1
label ELSE10
push this 1
push this 13
lt
not
if-goto THEN11
goto ELSE11
label THEN11
push constant 4
pop this 14
push this 13
pop this 1
label ELSE11
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto THEN12
goto ELSE12
label THEN12
push constant 10
pop local 4
goto ENDIF8
label ELSE12
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto THEN13
goto ELSE13
label THEN13
push constant 20
pop local 4
goto ENDIF9
label ELSE13
push constant 5
pop local 4
label ENDIF9
label ENDIF8
push this 14
push constant 1
eq
if-goto THEN14
goto ELSE14
label THEN14
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ENDIF10
label ELSE14
push this 14
push constant 2
eq
if-goto THEN15
goto ELSE15
label THEN15
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ENDIF11
label ELSE15
push this 14
push constant 3
eq
if-goto THEN16
goto ELSE16
label THEN16
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto ENDIF12
label ELSE16
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label ENDIF12
label ENDIF11
label ENDIF10
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
